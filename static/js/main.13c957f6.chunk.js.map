{"version":3,"sources":["components/Todo.js","components/TodoList.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","text","todo","todos","setTodos","className","completed","onClick","map","item","id","filter","el","ToDoList","filteredTodos","console","log","Form","setInputText","inputText","setStatus","value","onChange","e","target","type","preventDefault","Math","random","name","App","useState","status","setFilterTodos","useEffect","filterHandler","s","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13c957f6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n  //Events\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id));\n  };\n  const completeHandler = () => {\n      setTodos(todos.map(item => {\n        if(item.id === todo.id){\n            return {\n                ...item, completed: !item.completed\n            };\n        }\n        return item;\n      })\n    );\n  };\n  return (\n    <div className=\"todo\">\n      <li className={`todo-item ${todo.completed ? \"completed\" : \" \"}`}>{text}</li>\n      <button onClick={completeHandler}className=\"complete-btn\">\n        <i className=\"fas fa-check\"></i>\n      </button>\n      <button onClick={deleteHandler} className=\"trash-btn\">\n        <i className=\"fas fa-trash\"></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\n//Import Components\nimport Todo from \"./Todo\";\n\nconst ToDoList = ({ todos, setTodos, filteredTodos }) => {\n  console.log(todos);\n  return (\n    <div className=\"todo-container\">\n      <ul className=\"todo-list\">\n        {filteredTodos.map((todo) => (\n          <Todo\n            setTodos={setTodos}\n            todos={todos}\n            key={todo.id}\n            text={todo.text}\n            todo={todo}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ToDoList;\n","import React from \"react\";\nimport ToDoList from \"./TodoList\";\n\nconst Form = ({ setInputText, todos, setTodos, inputText, setStatus }) => {\n  // Write JS Code & Functions Here\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      { text: inputText, completed: false, id: Math.random() * 1000 },\n    ]);\n    setInputText(\"\");\n  };\n  const statusHandler = (e) => {\n      setStatus(e.target.value);\n  }\n\n  return (\n    <form>\n      <input\n        value={inputText}\n        onChange={inputTextHandler}\n        type=\"text\"\n        className=\"todo-input\"\n      />\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\n        <i className=\"fas fa-plus-square\"></i>\n      </button>\n      <div className=\"select\">\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\n          <option value=\"all\">All</option>\n          <option value=\"completed\">Completed</option>\n          <option value=\"uncompleted\">Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n//Importing Components\n\nimport Form from \"./components/Form\";\nimport Todo from \"./components/Todo\";\nimport ToDoList from \"./components/TodoList\";\n\nfunction App() {\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilterTodos] = useState([]);\n  //UseEffect\n  useEffect(() => {\n    filterHandler();\n  }, [todos, status]);\n  //Functions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilterTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilterTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilterTodos(todos);\n        break;\n    }\n  };\n  //Save to Local\n  const saveLocalTodos = () => {\n    if(localStorage.getItems('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      localStorage.setItem('todos', JSON.stringify(todos));\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Aun's Todo List</h1>\n      </header>\n      <Form\n        inputText={inputText}\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        setStatus={setStatus}\n        status={status}\n      />\n\n      <ToDoList\n        s\n        setTodos={setTodos}\n        todos={todos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}